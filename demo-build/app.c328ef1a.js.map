{"version":3,"sources":["../src/index.js","app.js"],"names":["Nano","element","state","components","createError","Error","document","querySelector","domElement","Array","isArray","forEach","elem","template","createTemplate","innerHTML","prototype","err","console","error","raw","String","newRaw","re","match","js","split","trim","log","replace","RegExp"],"mappings":";;ACAA;;;;AAEA,IAAIA,YAAJ,CAAS;ADFM,ACGbC,EAAAA,ODHsBD,ACGf,EAAE,EDHI,KCEN,EDFoD;AAAA,ACI3DE,EAAAA,KAAK,EAAE,EAFA;AAGPC,EAAAA,UAAU,EAAE;ADL+C,ACEpD,CAAT,KDF+BF,OAA8B,QAA9BA,OAA8B;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC3D,OAAKF,OAAL,GAAeA,OAAf;AACA,OAAKC,KAAL,GAAaA,KAAb;AACA,OAAKC,UAAL,GAAkBA,UAAlB;;AAEA,MAAI,CAAC,KAAKF,OAAV,EAAmB;AACjB,WAAO,KAAKG,WAAL,CACL,IAAIC,KAAJ,CAAU,oDAAV,CADK,CAAP;AAGD;;AAED,MAAI,CAACC,QAAQ,CAACC,aAAT,CAAuB,KAAKN,OAA5B,CAAL,EAA2C;AACzC,WAAO,KAAKG,WAAL,CAAiB,IAAIC,KAAJ,mBAAqB,KAAKJ,OAA1B,gBAAjB,CAAP;AACD;;AAED,MAAIO,UAAU,GAAG,KAAKP,OAAtB;AACA,OAAKA,OAAL,GAAeK,QAAQ,CAACC,aAAT,CAAuBC,UAAvB,CAAf;;AAEA,MAAI,KAAKL,UAAT,EAAqB;AACnB,QAAI,CAACM,KAAK,CAACC,OAAN,CAAc,KAAKP,UAAnB,CAAL,EAAqC;AACnC,aAAO,KAAKC,WAAL,CACL,IAAIC,KAAJ,CAAU,yCAAV,CADK,CAAP;AAGD;AACF;;AAED,OAAKF,UAAL,CAAgBQ,OAAhB,CAAwB,UAACC,IAAD,EAAU;AAChC,QAAIC,QAAQ,GAAG,KAAI,CAACC,cAAL,CAAoBF,IAApB,CAAf;;AACA,WAAQ,KAAI,CAACX,OAAL,CAAac,SAAb,cAA6BF,QAA7B,CAAR;AACD,GAHD;AAID;;AAEDb,IAAI,CAACgB,SAAL,CAAeZ,WAAf,GAA6B,UAACa,GAAD,EAAS;AACpCC,EAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,CAFD;;AAIAjB,IAAI,CAACgB,SAAL,CAAeF,cAAf,GAAgC,UAACF,IAAD,EAAU;AACxC,MAAIQ,GAAG,GAAGC,MAAM,CAACT,IAAI,CAACC,QAAN,CAAhB;AACA,MAAIS,MAAJ;AACA,MAAIC,EAAE,GAAGX,IAAI,CAACC,QAAL,CAAcW,KAAd,CAAoB,YAApB,CAAT;;AACA,MAAID,EAAJ,EAAQ;AACNA,IAAAA,EAAE,CAACZ,OAAH,CAAW,UAACa,KAAD,EAAW;AACpB,UAAIC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAY,SAAZ,EAAuB,CAAvB,EAA0BC,IAA1B,EAAT;AACAT,MAAAA,OAAO,CAACU,GAAR,CAAY,YAAYJ,KAAxB;AACAF,MAAAA,MAAM,GAAGF,GAAG,CAACS,OAAJ,CAAY,IAAIC,MAAJ,CAAWN,KAAX,CAAZ,EAA+BZ,IAAI,CAACV,KAAL,CAAWuB,EAAX,CAA/B,CAAT;AACD,KAJD;AAKD;;AACD,SAAOH,MAAP;AACD,CAZD","file":"app.c328ef1a.js","sourceRoot":"../demo","sourcesContent":["export default function Nano({ element, state, components }) {\n  this.element = element;\n  this.state = state;\n  this.components = components;\n\n  if (!this.element) {\n    return this.createError(\n      new Error(\"Please provide a element to attach the Nano App to\")\n    );\n  }\n\n  if (!document.querySelector(this.element)) {\n    return this.createError(new Error(`Element ${this.element} not found`));\n  }\n\n  let domElement = this.element;\n  this.element = document.querySelector(domElement);\n\n  if (this.components) {\n    if (!Array.isArray(this.components)) {\n      return this.createError(\n        new Error(\"Components should be passed as an array\")\n      );\n    }\n  }\n\n  this.components.forEach((elem) => {\n    let template = this.createTemplate(elem);\n    return (this.element.innerHTML += `${template}`);\n  });\n}\n\nNano.prototype.createError = (err) => {\n  console.error(err);\n};\n\nNano.prototype.createTemplate = (elem) => {\n  let raw = String(elem.template);\n  let newRaw;\n  let re = elem.template.match(/\\{{.*?\\}}/g);\n  if (re) {\n    re.forEach((match) => {\n      let js = match.split(/[{{}}]/g)[2].trim();\n      console.log(\"Match: \" + match);\n      newRaw = raw.replace(new RegExp(match), elem.state[js]);\n    });\n  }\n  return newRaw;\n};\n","import Nano from \"../src\";\n\nnew Nano({\n  element: \"#root\",\n  state: {},\n  components: [],\n});\n"]}